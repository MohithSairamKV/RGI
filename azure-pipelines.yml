trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    cd my-frontend
    npm install
    npm run build
  displayName: 'Install and build frontend'

- script: |
    cd my-backend
    npm install
    chmod +x ../../deploy.sh  # Assuming deploy.sh is in the root directory
  displayName: 'Install backend dependencies and set permissions'

- script: |
    echo "PORT=3000" >> /home/site/wwwroot/.env
    cd ../..
    ./deploy.sh
  displayName: 'Run deploy script'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    verbose: true
  displayName: 'Archive files'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'drop'
  displayName: 'Publish Artifact'

- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'AzureWebAppServiceConnection'
    appType: 'webApp'
    WebAppName: 'RGI'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    deploymentMethod: 'zipDeploy'
  displayName: 'Deploy to Azure Web App'
